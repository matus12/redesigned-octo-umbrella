{"version":3,"sources":["webpack:///./src/components/content.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Content","react_default","a","createElement","gatsby_browser_entry","query","render","data","style","display","flexWrap","justifyContent","marginTop","movieDb","results","map","movie","index","key","backgroundColor","textAlign","boxShadow","maxWidth","border","margin","padding","original_title","src","poster_path","alt","paddingBottom","card","_3864476954","IndexPage","layout","seo","title","keywords","content","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","opacity","position","width","height","zIndex","paddingTop","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-24f296048d8da138f8dc.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst card = (movie, index) =>\r\n  <div\r\n    key={index}\r\n    style={{\r\n      backgroundColor: \"rgba(0,0,0,0.1)\",\r\n      textAlign: \"center\",\r\n      boxShadow: \"10px 4px 8px 0 rgba(0,0,0,0.5)\",\r\n      maxWidth: \"330px\",\r\n      border: \"1px\",\r\n      margin: \"15px 10px 15px 10px\"\r\n    }}\r\n  >\r\n    <h3\r\n      style={{\r\n        padding: \"20px\",\r\n        margin: \"0px\"\r\n      }}\r\n    >\r\n      {movie.original_title}\r\n    </h3>\r\n    <img\r\n      src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n      alt=\"poster_image\"\r\n      style={{\r\n        paddingBottom: \"0px\"\r\n      }}\r\n    />\r\n  </div>\r\n\r\nconst Content = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        movieDb {\r\n          data {\r\n            results {\r\n              original_title\r\n              overview\r\n              poster_path\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      return (<div\r\n        style={{\r\n          display: \"inline-flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-evenly\",\r\n          marginTop: \"50px\"\r\n        }}\r\n      >{\r\n          data\r\n            .movieDb\r\n            .data\r\n            .results\r\n            .map((movie, index) => card(movie, index))\r\n        }\r\n      </div>\r\n      )\r\n    }}\r\n  />\r\n)\r\nexport default Content\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Content from \"../components/content\";\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <div>\r\n      <Content />\r\n    </div>\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <span\r\n          style={{\r\n            backgroundImage: \"url('https://image.tmdb.org/t/p/original/xRWht48C2V8XNfzvPehyClOvDni.jpg')\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            opacity: \"0.4\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n        </span>\r\n        <h1\r\n        style={{\r\n          position: \"relative\",\r\n          zIndex: \"2\",\r\n          textAlign: \"center\",\r\n          paddingTop: \"30px\"\r\n        }}>\r\n          NECHAAAAAAAAAAJ\r\n        </h1>\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 1800,\r\n            padding: `200px`,\r\n            paddingTop: 0,\r\n            position: \"relative\",\r\n            zIndex: \"2\",\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n              name: `keywords`,\r\n              content: keywords.join(`, `),\r\n            }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}