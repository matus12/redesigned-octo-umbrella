{"version":3,"sources":["webpack:///./src/components/Card.jsx","webpack:///./src/components/content.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Card","_React$PureComponent","props","_this","call","this","onMouseEnter","setState","width","alpha","cursor","onMouseLeave","onClick","navigate","state","value","movie","original_title","color","inheritsLoose_default","prototype","render","react_default","a","createElement","key","index","style","backgroundColor","textAlign","boxShadow","maxWidth","border","margin","padding","src","poster_path","alt","paddingBottom","React","PureComponent","Content","gatsby_browser_entry","query","data","display","flexWrap","justifyContent","marginTop","movieDb","results","map","Card_Card","_3864476954","IndexPage","layout","seo","title","keywords","content","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","opacity","position","height","zIndex","paddingTop","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-4dec34dd5c3f68d010aa.js","sourcesContent":["import React from \"react\";\r\nimport { navigate } from \"gatsby\"\r\n\r\nexport class Card extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: 0,\r\n            alpha: 0.1,\r\n            cursor: \"arrow\"\r\n        };\r\n    }\r\n\r\n    onMouseEnter = () => {\r\n        this.setState(() => ({\r\n            width: 0,\r\n            alpha: 0.2,\r\n            cursor: \"pointer\"\r\n        }));\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.setState(() => ({\r\n            width: 0,\r\n            alpha: 0.1,\r\n            cursor: \"arrow\"\r\n        }));\r\n    }\r\n\r\n    onClick = () => {\r\n        navigate(\r\n            \"/movie/\",\r\n            {\r\n                state: {\r\n                    value: this.props.movie.original_title\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                key={this.props.index}\r\n                style={{\r\n                    backgroundColor: `rgba(${this.state.color},0,0,${this.state.alpha})`,\r\n                    textAlign: \"center\",\r\n                    boxShadow: \"10px 4px 8px 0 rgba(0,0,0,0.5)\",\r\n                    maxWidth: \"330px\",\r\n                    border: \"1px\",\r\n                    margin: \"15px 10px 15px 10px\",\r\n                    cursor: this.state.cursor\r\n                }}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                onClick={this.onClick}\r\n            >\r\n                <h3\r\n                    style={{\r\n                        padding: \"20px\",\r\n                        margin: \"0px\"\r\n                    }}\r\n                >\r\n                    {this.props.movie.original_title}\r\n                </h3>\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/w500${this.props.movie.poster_path}`}\r\n                    alt=\"poster_image\"\r\n                    style={{\r\n                        paddingBottom: \"0px\"\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport { Card } from \"./Card\"\r\n\r\nlet maxWidth = \"330px\";\r\n\r\nconst onMouseEnter = () => {\r\n  maxWidth = \"350px\";\r\n  console.log(\"enter \", maxWidth);\r\n}\r\n\r\nconst onMouseLeave = () => {\r\n  maxWidth = \"330px\";\r\n  console.log(\"leave \", maxWidth);\r\n}\r\n\r\nconst card = (movie, index) =>\r\n  <div\r\n    key={index}\r\n    style={{\r\n      backgroundColor: \"rgba(0,0,0,0.1)\",\r\n      textAlign: \"center\",\r\n      boxShadow: \"10px 4px 8px 0 rgba(0,0,0,0.5)\",\r\n      maxWidth: maxWidth,\r\n      border: \"1px\",\r\n      margin: \"15px 10px 15px 10px\"\r\n    }}\r\n    onMouseEnter={onMouseEnter}\r\n    onMouseLeave={onMouseLeave}\r\n  >\r\n    <Card movie={movie} index={3} />\r\n    <h3\r\n      style={{\r\n        padding: \"20px\",\r\n        margin: \"0px\"\r\n      }}\r\n    >\r\n      {movie.original_title}\r\n    </h3>\r\n    <img\r\n      src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n      alt=\"poster_image\"\r\n      style={{\r\n        paddingBottom: \"0px\"\r\n      }}\r\n    />\r\n  </div>\r\n\r\nconst Content = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        movieDb {\r\n          data {\r\n            results {\r\n              original_title\r\n              overview\r\n              poster_path\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      return (<div\r\n        style={{\r\n          display: \"inline-flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-evenly\",\r\n          marginTop: \"50px\"\r\n        }}\r\n      >{\r\n          data\r\n            .movieDb\r\n            .data\r\n            .results\r\n            .map((movie, index) =>\r\n              <Card\r\n                movie={movie}\r\n                index={index}\r\n              />\r\n            )\r\n        }\r\n      </div>\r\n      )\r\n    }}\r\n  />\r\n)\r\nexport default Content\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Content from \"../components/content\";\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <div>\r\n      <Content />\r\n    </div>\r\n    <Link to=\"/movie/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <span\r\n          style={{\r\n            backgroundImage: \"url('https://image.tmdb.org/t/p/original/xRWht48C2V8XNfzvPehyClOvDni.jpg')\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            opacity: \"0.4\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n        </span>\r\n        <h1\r\n        style={{\r\n          position: \"relative\",\r\n          zIndex: \"2\",\r\n          textAlign: \"center\",\r\n          paddingTop: \"30px\"\r\n        }}>\r\n          NECHAAAAAAAAAAJ\r\n        </h1>\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 1800,\r\n            padding: `200px`,\r\n            paddingTop: 0,\r\n            position: \"relative\",\r\n            zIndex: \"2\",\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n              name: `keywords`,\r\n              content: keywords.join(`, `),\r\n            }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}