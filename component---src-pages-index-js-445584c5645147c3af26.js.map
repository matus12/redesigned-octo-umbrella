{"version":3,"sources":["webpack:///./src/components/content.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Content","react_default","a","createElement","gatsby_browser_entry","query","render","data","console","log","movieDb","results","map","edge","index","key","original_title","overview","src","poster_path","alt","_3864476954","IndexPage","layout","seo","title","keywords","content","to","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","opacity","position","width","height","margin","maxWidth","padding","paddingTop","zIndex","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"yJAyCeA,EAtCC,kBACdC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,aAaLC,OAAQ,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,EAAKG,QAAQH,KAAKI,SACvBJ,EACJG,QACAH,KACAI,QACAC,IAAI,SAACC,EAAMC,GACV,OAAQb,EAAAC,EAAAC,cAAA,OAAKY,IAAKD,GACRb,EAAAC,EAAAC,cAAA,UACGU,EAAKG,gBAERf,EAAAC,EAAAC,cAAA,SACGU,EAAKI,UAERhB,EAAAC,EAAAC,cAAA,OACEe,IAAG,kCAAoCL,EAAKM,YAC5CC,IAAI,qBA9B1Bb,KAAAc,KCaaC,UAVG,kBAChBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC5BzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,OAEF1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwB,GAAG,YAAT,oDCbJC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAArC,IAAA2B,EAAA,SAYMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAhC,EAAAC,cAACqC,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMpC,MACLsC,EAAgBF,EAAMtC,QAAUwC,EAAgBF,EAAMtC,OAAOE,MAEtDoC,EAAMrC,QAAUqC,EAAMG,UAC5BH,EAAMpC,KAAOoC,EAAMpC,KAAKA,KAAOsC,EAAgBF,EAAMtC,OAAOE,MAGvD2B,EAAAhC,EAAAC,cAAA,uCA4Bf6B,EAAYe,UAAY,CACtBxC,KAAMyC,IAAUC,OAChB5C,MAAO2C,IAAUE,OAAOC,WACxB7C,OAAQ0C,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,0FCazCK,UAAS,SAAAC,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACbc,EAAA1D,EAAAC,cAAC0D,EAAA,EAAD,CACExD,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVqD,EAAA1D,EAAAC,cAAAyD,EAAA1D,EAAA4D,SAAA,KACAF,EAAA1D,EAAAC,cAAA,QACG4D,MAAO,CACNC,gBAAiB,6EACjBC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,MACTC,SAAU,QACVC,MAAO,OACPC,OAAQ,UAIVX,EAAA1D,EAAAC,cAAA,OACE4D,MAAO,CACLS,OAAM,SACNC,SAAU,IACVC,QAAO,QACPC,WAAY,EACZN,SAAU,WACVO,OAAQ,MAGVhB,EAAA1D,EAAAC,cAAA,YAAO2C,GACPc,EAAA1D,EAAAC,cAAA,oBACK,IAAI0E,MAAOC,cADhB,mBAGElB,EAAA1D,EAAAC,cAAA,KAAG4E,KAAK,4BAAR,cAvCVxE,KAAAyE,MA+CFtB,EAAOX,UAAY,CACjBD,SAAUE,IAAUiC,KAAK9B,YAGZO,iMC3DTwB,EAAmB,SAAAvB,GAAkB,IAAfwB,EAAexB,EAAfwB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO9C,IAAMtC,cAAcqF,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBnC,UAAY,CAC3BoC,SAAUnC,IAAU4C,MAAM,CACxBL,SAAUvC,IAAUE,OAAOC,aAC1BA,YAGU+B,6GCTf,SAASW,EAATlC,GAA2D,IAA5CmC,EAA4CnC,EAA5CmC,YAAaC,EAA+BpC,EAA/BoC,KAAMC,EAAyBrC,EAAzBqC,KAAMtE,EAAmBiC,EAAnBjC,SAAUD,EAASkC,EAATlC,MACxCwE,EADiDC,EAAA3F,KACjD0F,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACElC,EAAA1D,EAAAC,cAACkG,EAAAnG,EAAD,CACEoG,eAAgB,CACdP,QAEFtE,MAAOA,EACP8E,cAAa,QAAUN,EAAKG,aAAa3E,MACzCuE,KAAM,CACJ,CACEQ,KAAI,cACJ7E,QAASwE,GAEX,CACEM,SAAQ,WACR9E,QAASF,GAEX,CACEgF,SAAQ,iBACR9E,QAASwE,GAEX,CACEM,SAAQ,UACR9E,QAAO,WAET,CACE6E,KAAI,eACJ7E,QAAO,WAET,CACE6E,KAAI,kBACJ7E,QAASsE,EAAKG,aAAaM,QAE7B,CACEF,KAAI,gBACJ7E,QAASF,GAEX,CACE+E,KAAI,sBACJ7E,QAASwE,IAGVQ,OACCjF,EAASkF,OAAS,EACd,CACEJ,KAAI,WACJ7E,QAASD,EAASmF,KAAT,OAEX,IAELF,OAAOX,KAKhBH,EAAIiB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNtE,SAAU,IAGZmE,EAAI9C,UAAY,CACd+C,YAAa9C,IAAUE,OACvB6C,KAAM/C,IAAUE,OAChB8C,KAAMhD,IAAU+D,MAChBrF,SAAUsB,IAAUgE,QAAQhE,IAAUE,QACtCzB,MAAOuB,IAAUE,OAAOC,YAGX0C","file":"component---src-pages-index-js-445584c5645147c3af26.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Content = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        movieDb {\r\n          data {\r\n            results {\r\n              original_title\r\n              overview\r\n              poster_path\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n        console.log(data.movieDb.data.results)\r\n        return data\r\n          .movieDb\r\n          .data\r\n          .results\r\n          .map((edge, index) => {\r\n            return  <div key={index}>\r\n                      <h2>\r\n                        {edge.original_title}\r\n                      </h2>\r\n                      <p>\r\n                        {edge.overview}\r\n                      </p>\r\n                      <img \r\n                        src={`https://image.tmdb.org/t/p/w500${edge.poster_path}`}\r\n                        alt=\"poster_image\"  \r\n                      />\r\n                    </div>\r\n          })\r\n    }}\r\n  />\r\n)\r\nexport default Content\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Content from \"../components/content\";\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <div>\r\n      <Content />\r\n    </div>\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n      <span\r\n         style={{\r\n          backgroundImage: \"url('https://image.tmdb.org/t/p/original/xRWht48C2V8XNfzvPehyClOvDni.jpg')\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          opacity: \"0.4\",\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\"\r\n         }}\r\n      >\r\n      </span>\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `200px`,\r\n            paddingTop: 0,\r\n            position: \"relative\",\r\n            zIndex: \"2\",\r\n        }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}